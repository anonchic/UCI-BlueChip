/*
Added header information. can be retrived from binaries w/ ident <filename>
*/
.seg "data"
rcsid:
        .ascii "$Id: test_store_load.s,v 1.3 91/01/17 14:23:06 rudi Exp $"
.align 8
.seg "text"

#include "err_incr.h"
#include "err_macro.h"	

	new_init(test_store_load)
	
#include "crueltt.S"

/**************************************************************	

 	Test Items :						
		(1) test LD ,LDSB ,LDUB ,LDSH ,LDUH		
		(2) test LDA,LDSBA,LDUBA,LDSHA,LDUHA		
		(3) test ST ,STB ,STH				
		(4) test STA,STBA,STHA				
		(5) test LDSTB,LDSTBA    				
	Test results :						
		%i1 stores a count of load errors	(+ mumble mumble )
		%i2 stores a count of store errors	(+ mumble mumble )
		%i3 stores a count of all the errors
	if %i3==0 then no errors occured	
         							
PSR: 0x00008080   icc DF PIL S pS ET CWP    WIM
                  0x4  0 0x0 1  0  0 0x00   0x0
                   Z                      00000000

             INS          LOCALS            OUTS         GLOBALS     
  0:  0x00001f0c      0x0001d51a      0x00001f28      0x00000000     
  1:  0x0051e000      0x3377bbff      0x3377bbff      0x00112233     
  2:  0x001de000      0x2266aaee      0x2266aaee      0x44556677     
  3:  0x00000000      0x115599dd      0x115599dd      0x8899aabb     
  4:  0x0051000c      0x44556677      0x44556677      0xccddeeff     
  5:  0x001d0046      0x00000022      0x00000022      0x01232266     
  6:  0x00000052      0x000000ff      0x000000ff      0x89abaaee     
  7:  0x00000004      0x00000044      0x00000044      0x115599dd

This diagnostics has been MODIFIED to conform to BIT ASI's.  The
final register values are likely to be different since I changed the
order of various tests.  If this is a problem, I will gladly move
the tests into the original order.  ATL
**************************************************************	*/

// Define this if you've got an alternate space. We don't seem to.--murph
// #define USE_ALTERNATE_SPACE
	
#define    LOAD_ADDRESS %i0
#define   STORE_ADDRESS %o0

#define    STORE_ERRORS %i1
#define     LOAD_ERRORS %i2
#define    TOTAL_ERRORS %i3
#define     STORE_TESTS %i4
#define      LOAD_TESTS %i5
#define     TOTAL_TESTS %i6

#define         OFF_SET %i7

#define STORE_PATTERN_1 %g1
#define STORE_PATTERN_2 %g2
#define STORE_PATTERN_3 %g3
#define STORE_PATTERN_4 %g4
#define STORE_PATTERN_5 %g5
#define STORE_PATTERN_6 %g6
#define STORE_PATTERN_7 %g7

#define      OPERATION %l0

#define DATA_PATTERN_1 %l1
#define DATA_PATTERN_2 %l2
#define DATA_PATTERN_3 %l3
#define DATA_PATTERN_4 %l4
#define DATA_PATTERN_5 %l5
#define DATA_PATTERN_6 %l6
#define DATA_PATTERN_7 %l7

#define LOAD_PATTERN_1 %o1
#define LOAD_PATTERN_2 %o2
#define LOAD_PATTERN_3 %o3
#define LOAD_PATTERN_4 %o4
#define LOAD_PATTERN_5 %o5
#define LOAD_PATTERN_6 %o6
#define LOAD_PATTERN_7 %o7

#include "err_subr.S"
	
start:
/* INITIALIZATION */
/*  SET PSR       */
/*  SET WIM       */
/*  SET TBR       */
! Originally this diagnostic used ET=0, but this will cause traps when run
! under memory disable mode on the simulator.  It is now set to 1.

	set	0x000000a0,%g1			! SET SPR :  S=1, pS=0,
	mov	%g1,%psr			!           ET=1,CWP=0
	mov	%r0,%wim
	set	address_0, %g1
	mov	%g1,%tbr
	nop
	nop
	nop

/*  SET CONSTANT to REGISTERS */

	sethi	%hi(0x0051e000),STORE_ERRORS
	sethi	%hi(0x001de000),LOAD_ERRORS
	mov	%r0,TOTAL_ERRORS
	sethi	%hi(0x00510000),STORE_TESTS
	sethi	%hi(0x001d0000),LOAD_TESTS
	mov	%r0,TOTAL_TESTS

	set	data,LOAD_ADDRESS
	set	memory,STORE_ADDRESS

/*  READY */

/*	test	LD	*/

	set	0x0000001d,OPERATION			! SET OPERATION

	sethi	%hi(0x3377bbff),LOAD_PATTERN_1
	sethi	%hi(0x2266aaee),LOAD_PATTERN_2
	sethi	%hi(0x115599dd),LOAD_PATTERN_3
	sethi	%hi(0x004488cc),LOAD_PATTERN_4
	sethi	%hi(0x22336677),LOAD_PATTERN_5
	sethi	%hi(0xaabbeeff),LOAD_PATTERN_6
	sethi	%hi(0x00112233),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x3377bbff),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x2266aaee),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x115599dd),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x004488cc),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x22336677),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0xaabbeeff),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00112233),LOAD_PATTERN_7
	ld	[LOAD_ADDRESS]    , DATA_PATTERN_1
	ld	[LOAD_ADDRESS+4]  , DATA_PATTERN_2
	ld	[LOAD_ADDRESS+8]  , DATA_PATTERN_3
	ld	[LOAD_ADDRESS+12] , DATA_PATTERN_4
	ld	[LOAD_ADDRESS+16] , DATA_PATTERN_5
	ld	[LOAD_ADDRESS+20] , DATA_PATTERN_6
	ld	[LOAD_ADDRESS+24] , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop01
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop01:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop02
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop02:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop03
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop03:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop04
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop04:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop05
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop05:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop06
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop06:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop07
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop07:
/*	test	LDSB	*/
//good
	set	0x00001d5b,OPERATION			! SET OPERATION

	sethi	%hi(0x00000033),LOAD_PATTERN_1
	sethi	%hi(0x00000077),LOAD_PATTERN_2
	sethi	%hi(0xffffffbb),LOAD_PATTERN_3
	sethi	%hi(0xffffffff),LOAD_PATTERN_4
	sethi	%hi(0x00000022),LOAD_PATTERN_5
	sethi	%hi(0x00000066),LOAD_PATTERN_6
	sethi	%hi(0xffffffaa),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x00000033),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x00000077),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0xffffffbb),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0xffffffff),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00000022),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x00000066),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0xffffffaa),LOAD_PATTERN_7

	ldsb	[LOAD_ADDRESS]    , DATA_PATTERN_1
	ldsb	[LOAD_ADDRESS+1]  , DATA_PATTERN_2
	ldsb	[LOAD_ADDRESS+2]  , DATA_PATTERN_3
	ldsb	[LOAD_ADDRESS+3] , DATA_PATTERN_4
	ldsb	[LOAD_ADDRESS+4] , DATA_PATTERN_5
	ldsb	[LOAD_ADDRESS+5] , DATA_PATTERN_6
	ldsb	[LOAD_ADDRESS+6] , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop11
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop11:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop12
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop12:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop13
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop13:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop14
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop14:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop15
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop15:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop16
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop16:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop17
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop17:
/*	test	LDUB	*/

	set	0x00001d0b,OPERATION			! SET OPERATION

	sethi	%hi(0x00000033),LOAD_PATTERN_1
	sethi	%hi(0x00000077),LOAD_PATTERN_2
	sethi	%hi(0x000000bb),LOAD_PATTERN_3
	sethi	%hi(0x000000ff),LOAD_PATTERN_4
	sethi	%hi(0x00000022),LOAD_PATTERN_5
	sethi	%hi(0x00000066),LOAD_PATTERN_6
	sethi	%hi(0x000000aa),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x00000033),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x00000077),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x000000bb),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x000000ff),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00000022),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x00000066),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x000000aa),LOAD_PATTERN_7

	ldub	[LOAD_ADDRESS]    , DATA_PATTERN_1
	ldub	[LOAD_ADDRESS+1]  , DATA_PATTERN_2
	ldub	[LOAD_ADDRESS+2]  , DATA_PATTERN_3
	ldub	[LOAD_ADDRESS+3] , DATA_PATTERN_4
	ldub	[LOAD_ADDRESS+4] , DATA_PATTERN_5
	ldub	[LOAD_ADDRESS+5] , DATA_PATTERN_6
	ldub	[LOAD_ADDRESS+6] , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop21
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop21:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop22
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop22:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop23
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop23:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop24
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop24:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop25
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop25:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop26
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop26:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop27
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop27:
/*	test	LDSH	*/

	set	0x00001d5f,OPERATION			! SET OPERATION

	sethi	%hi(0x00003377),LOAD_PATTERN_1
	sethi	%hi(0xffffbbff),LOAD_PATTERN_2
	sethi	%hi(0x00002266),LOAD_PATTERN_3
	sethi	%hi(0xffffaaee),LOAD_PATTERN_4
	sethi	%hi(0x00001155),LOAD_PATTERN_5
	sethi	%hi(0xffff99dd),LOAD_PATTERN_6
	sethi	%hi(0x00000044),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x00003377),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0xffffbbff),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x00002266),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0xffffaaee),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00001155),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0xffff99dd),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00000044),LOAD_PATTERN_7

	ldsh	[LOAD_ADDRESS]    , DATA_PATTERN_1
	ldsh	[LOAD_ADDRESS+2]  , DATA_PATTERN_2
	ldsh	[LOAD_ADDRESS+4]  , DATA_PATTERN_3
	ldsh	[LOAD_ADDRESS+6] , DATA_PATTERN_4
	ldsh	[LOAD_ADDRESS+8] , DATA_PATTERN_5
	ldsh	[LOAD_ADDRESS+10] , DATA_PATTERN_6
	ldsh	[LOAD_ADDRESS+12] , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop31
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop31:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop32
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop32:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop33
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop33:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop34
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop34:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop35
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop35:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop36
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop36:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop37
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop37:
/*	test	LDUH	*/

//good
	set	0x00001d0f,OPERATION			! SET OPERATION

	sethi	%hi(0x00003377),LOAD_PATTERN_1
	sethi	%hi(0x0000bbff),LOAD_PATTERN_2
	sethi	%hi(0x00002266),LOAD_PATTERN_3
	sethi	%hi(0x0000aaee),LOAD_PATTERN_4
	sethi	%hi(0x00001155),LOAD_PATTERN_5
	sethi	%hi(0x000099dd),LOAD_PATTERN_6
	sethi	%hi(0x00000044),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x00003377),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x0000bbff),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x00002266),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x0000aaee),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00001155),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x000099dd),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00000044),LOAD_PATTERN_7

	lduh	[LOAD_ADDRESS]    , DATA_PATTERN_1
	lduh	[LOAD_ADDRESS+2]  , DATA_PATTERN_2
	lduh	[LOAD_ADDRESS+4]  , DATA_PATTERN_3
	lduh	[LOAD_ADDRESS+6] , DATA_PATTERN_4
	lduh	[LOAD_ADDRESS+8] , DATA_PATTERN_5
	lduh	[LOAD_ADDRESS+10] , DATA_PATTERN_6
	lduh	[LOAD_ADDRESS+12] , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop41
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop41:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop42
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop42:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop43
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop43:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop44
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop44:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop45
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop45:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop46
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop46:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop47
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop47:
/*	test Atomic Load-Store	*/

	set	0x00001d51,OPERATION			! SET OPERATION

	ldstub	[LOAD_ADDRESS+4],DATA_PATTERN_5
	nop
	nop
	set	0x22, LOAD_PATTERN_5

	ldub	[LOAD_ADDRESS+4],DATA_PATTERN_6
	set	0xff,LOAD_PATTERN_6

	xorcc	LOAD_PATTERN_5,DATA_PATTERN_5,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop226
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop226:
	xorcc	LOAD_PATTERN_6,DATA_PATTERN_6,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop227
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop227:
/*	test	LDA	*/

	set	0x000001da,OPERATION			! SET OPERATION

/*
 * Original code used ASI=0xf to write cache data field.  This is now
 * modified for the BIT by using ASI=0x2 and A[31:28]=0x9. (ATL)

	modified ASI back to 0xf RU
 */
	set	0x90000000, LOAD_PATTERN_1		! temp register
	add	LOAD_PATTERN_1, LOAD_ADDRESS, LOAD_ADDRESS
							! get 0x9 in high bits

//good	

	sethi	%hi(0x3377bbff),LOAD_PATTERN_1
	sethi	%hi(0x2266aaee),LOAD_PATTERN_2
	sethi	%hi(0x115599dd),LOAD_PATTERN_3
	sethi	%hi(0x004488cc),LOAD_PATTERN_4
	sethi	%hi(0x22336677),LOAD_PATTERN_5
	sethi	%hi(0xaabbeeff),LOAD_PATTERN_6
	sethi	%hi(0x00112233),LOAD_PATTERN_7
	or   	LOAD_PATTERN_1,%lo(0x3377bbff),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x2266aaee),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x115599dd),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x004488cc),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x22336677),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0xaabbeeff),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00112233),LOAD_PATTERN_7

/*	sta	LOAD_PATTERN_1, [LOAD_ADDRESS]0x0f
	set	4,OFF_SET
	sta	LOAD_PATTERN_2, [LOAD_ADDRESS+OFF_SET]0x0f
	set	8,OFF_SET
	sta	LOAD_PATTERN_3, [LOAD_ADDRESS+OFF_SET]0x0f
	set	12,OFF_SET
	sta	LOAD_PATTERN_4, [LOAD_ADDRESS+OFF_SET]0x0f
	set	16,OFF_SET
	sta	LOAD_PATTERN_5, [LOAD_ADDRESS+OFF_SET]0x0f
	set	20,OFF_SET
	sta	LOAD_PATTERN_6, [LOAD_ADDRESS+OFF_SET]0x0f
	set	24,OFF_SET
	sta	LOAD_PATTERN_7, [LOAD_ADDRESS+OFF_SET]0x0f

	lda	[LOAD_ADDRESS]0x0f   , DATA_PATTERN_1
	set	4,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_2
	set	8,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_3
	set	12,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f, DATA_PATTERN_4
	set	16,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f, DATA_PATTERN_5
	set	20,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f, DATA_PATTERN_6
	set	24,OFF_SET
	lda	[LOAD_ADDRESS+OFF_SET]0x0f, DATA_PATTERN_7 */

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop101
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop101:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop102
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop102:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop103
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop103:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop104
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop104:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop105
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop105:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop106
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop106:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop107
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop107:
/*	test	LDSBA	*/
	sethi	0x0001d5ba,OPERATION			! SET OPERATION

	sethi	%hi(0x00000033),LOAD_PATTERN_1
	sethi	%hi(0x00000077),LOAD_PATTERN_2
	sethi	%hi(0xffffffbb),LOAD_PATTERN_3
	sethi	%hi(0xffffffff),LOAD_PATTERN_4
	sethi	%hi(0x00000022),LOAD_PATTERN_5
	sethi	%hi(0x00000066),LOAD_PATTERN_6
	sethi	%hi(0xffffffaa),LOAD_PATTERN_7
	or	OPERATION,%lo(0x0001d5ba),OPERATION
	or   	LOAD_PATTERN_1,%lo(0x00000033),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x00000077),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0xffffffbb),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0xffffffff),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00000022),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x00000066),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0xffffffaa),LOAD_PATTERN_7

#ifdef USE_ALTERNATE_SPACE
	
	stba	LOAD_PATTERN_1, [LOAD_ADDRESS]0x0f
	set	1,OFF_SET

	stba	LOAD_PATTERN_2, [LOAD_ADDRESS+OFF_SET]0x0f
	set	2,OFF_SET
	stba	LOAD_PATTERN_3, [LOAD_ADDRESS+OFF_SET]0x0f
	set	3,OFF_SET
	stba	LOAD_PATTERN_4, [LOAD_ADDRESS+OFF_SET]0x0f
	set	4,OFF_SET
	stba	LOAD_PATTERN_5, [LOAD_ADDRESS+OFF_SET]0x0f
	set	5,OFF_SET
	stba	LOAD_PATTERN_6, [LOAD_ADDRESS+OFF_SET]0x0f
	set	6,OFF_SET
	stba	LOAD_PATTERN_7, [LOAD_ADDRESS+OFF_SET]0x0f

	ldsba	[LOAD_ADDRESS]0x0f   , DATA_PATTERN_1
	set	1,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_2
	set	2,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_3
	set	3,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_4
	set	4,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_5
	set	5,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_6
	set	6,OFF_SET
	ldsba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_7

#endif	

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop111
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop111:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop112
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop112:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop113
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop113:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop114
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop114:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop115
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop115:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop116
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop116:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop117
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop117:
/*	test	LDUBA	*/
#ifdef USE_ALTERNATE_SPACE

	sethi	0x0001d0ba,OPERATION			! SET OPERATION

	sethi	%hi(0x00000033),LOAD_PATTERN_1
	sethi	%hi(0x00000077),LOAD_PATTERN_2
	sethi	%hi(0x000000bb),LOAD_PATTERN_3
	sethi	%hi(0x000000ff),LOAD_PATTERN_4
	sethi	%hi(0x00000022),LOAD_PATTERN_5
	sethi	%hi(0x00000066),LOAD_PATTERN_6
	sethi	%hi(0x000000aa),LOAD_PATTERN_7
	or	OPERATION,%lo(0x0001d0ba),OPERATION
	or   	LOAD_PATTERN_1,%lo(0x00000033),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x00000077),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x000000bb),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x000000ff),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00000022),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x00000066),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x000000aa),LOAD_PATTERN_7

	stba	LOAD_PATTERN_1, [LOAD_ADDRESS]0x0f
	set	1,OFF_SET
	stba	LOAD_PATTERN_2, [LOAD_ADDRESS+OFF_SET]0x0f
	set	2,OFF_SET
	stba	LOAD_PATTERN_3, [LOAD_ADDRESS+OFF_SET]0x0f
	set	3,OFF_SET
	stba	LOAD_PATTERN_4, [LOAD_ADDRESS+OFF_SET]0x0f
	set	4,OFF_SET
	stba	LOAD_PATTERN_5, [LOAD_ADDRESS+OFF_SET]0x0f
	set	5,OFF_SET
	stba	LOAD_PATTERN_6, [LOAD_ADDRESS+OFF_SET]0x0f
	set	6,OFF_SET
	stba	LOAD_PATTERN_7, [LOAD_ADDRESS+OFF_SET]0x0f

	lduba	[LOAD_ADDRESS]0x0f   , DATA_PATTERN_1
	set	1,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_2
	set	2,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_3
	set	3,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_4
	set	4,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_5
	set	5,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_6
	set	6,OFF_SET
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop121
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop121:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop122
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop122:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop123
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop123:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop124
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop124:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop125
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop125:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop126
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop126:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop127
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop127:
/*	test	LDSHA	*/

//bad


	sethi	0x0001d5fa,OPERATION			! SET OPERATION

	sethi	%hi(0x00003377),LOAD_PATTERN_1
	sethi	%hi(0xffffbbff),LOAD_PATTERN_2
	sethi	%hi(0x00002266),LOAD_PATTERN_3
	sethi	%hi(0xffffaaee),LOAD_PATTERN_4
	sethi	%hi(0x00001155),LOAD_PATTERN_5
	sethi	%hi(0xffff99dd),LOAD_PATTERN_6
	sethi	%hi(0x00000044),LOAD_PATTERN_7
	or	OPERATION,%lo(0x0001d5fa),OPERATION
	or   	LOAD_PATTERN_1,%lo(0x00003377),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0xffffbbff),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x00002266),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0xffffaaee),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00001155),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0xffff99dd),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00000044),LOAD_PATTERN_7

	stha	LOAD_PATTERN_1, [LOAD_ADDRESS]0x0f
	set	2,OFF_SET
	stha	LOAD_PATTERN_2, [LOAD_ADDRESS+OFF_SET]0x0f
	set	4,OFF_SET
	stha	LOAD_PATTERN_3, [LOAD_ADDRESS+OFF_SET]0x0f
	set	6,OFF_SET
	stha	LOAD_PATTERN_4, [LOAD_ADDRESS+OFF_SET]0x0f
	set	8,OFF_SET
	stha	LOAD_PATTERN_5, [LOAD_ADDRESS+OFF_SET]0x0f
	set	10,OFF_SET
	stha	LOAD_PATTERN_6, [LOAD_ADDRESS+OFF_SET]0x0f
	set	12,OFF_SET
	stha	LOAD_PATTERN_7, [LOAD_ADDRESS+OFF_SET]0x0f

	ldsha	[LOAD_ADDRESS]0x0f    , DATA_PATTERN_1
	set	2,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_2
	set	4,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_3
	set	6,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_4
	set	8,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_5
	set	10,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_6
	set	12,OFF_SET
	ldsha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop131
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop131:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop132
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop132:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop133
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop133:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop134
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop134:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop135
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop135:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop136
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop136:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop137
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop137:
/*	test	LDUHA	*/

	sethi	0x0001d0fa,OPERATION			! SET OPERATION

	sethi	%hi(0x00003377),LOAD_PATTERN_1
	sethi	%hi(0x0000bbff),LOAD_PATTERN_2
	sethi	%hi(0x00002266),LOAD_PATTERN_3
	sethi	%hi(0x0000aaee),LOAD_PATTERN_4
	sethi	%hi(0x00001155),LOAD_PATTERN_5
	sethi	%hi(0x000099dd),LOAD_PATTERN_6
	sethi	%hi(0x00000044),LOAD_PATTERN_7
	or	OPERATION,%lo(0x0001d0fa),OPERATION
	or   	LOAD_PATTERN_1,%lo(0x00003377),LOAD_PATTERN_1
	or   	LOAD_PATTERN_2,%lo(0x0000bbff),LOAD_PATTERN_2
	or   	LOAD_PATTERN_3,%lo(0x00002266),LOAD_PATTERN_3
	or   	LOAD_PATTERN_4,%lo(0x0000aaee),LOAD_PATTERN_4
	or   	LOAD_PATTERN_5,%lo(0x00001155),LOAD_PATTERN_5
	or   	LOAD_PATTERN_6,%lo(0x000099dd),LOAD_PATTERN_6
	or   	LOAD_PATTERN_7,%lo(0x00000044),LOAD_PATTERN_7

	stha	LOAD_PATTERN_1, [LOAD_ADDRESS]0x0f
	set	2,OFF_SET
	stha	LOAD_PATTERN_2, [LOAD_ADDRESS+OFF_SET]0x0f
	set	4,OFF_SET
	stha	LOAD_PATTERN_3, [LOAD_ADDRESS+OFF_SET]0x0f
	set	6,OFF_SET
	stha	LOAD_PATTERN_4, [LOAD_ADDRESS+OFF_SET]0x0f
	set	8,OFF_SET
	stha	LOAD_PATTERN_5, [LOAD_ADDRESS+OFF_SET]0x0f
	set	10,OFF_SET
	stha	LOAD_PATTERN_6, [LOAD_ADDRESS+OFF_SET]0x0f
	set	12,OFF_SET
	stha	LOAD_PATTERN_7, [LOAD_ADDRESS+OFF_SET]0x0f

	lduha	[LOAD_ADDRESS]0x0f    , DATA_PATTERN_1
	set	2,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_2
	set	4,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f  , DATA_PATTERN_3
	set	6,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_4
	set	8,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_5
	set	10,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_6
	set	12,OFF_SET
	lduha	[LOAD_ADDRESS+OFF_SET]0x0f , DATA_PATTERN_7

	xorcc	DATA_PATTERN_1,LOAD_PATTERN_1,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop141
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop141:
	xorcc	DATA_PATTERN_2,LOAD_PATTERN_2,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop142
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop142:
	xorcc	DATA_PATTERN_3,LOAD_PATTERN_3,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop143
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop143:
	xorcc	DATA_PATTERN_4,LOAD_PATTERN_4,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop144
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop144:
	xorcc	DATA_PATTERN_5,LOAD_PATTERN_5,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop145
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop145:
	xorcc	DATA_PATTERN_6,LOAD_PATTERN_6,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop146
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS
stop146:
	xorcc	DATA_PATTERN_7,LOAD_PATTERN_7,%r0
	add	LOAD_TESTS,1,LOAD_TESTS
	be	stop147
	nop
	add	LOAD_ERRORS,1,LOAD_ERRORS

#endif
	
stop147:
/*	SET CONSTANT TO REGISTERS	*/

	sethi	%hi(0x00112233),STORE_PATTERN_1
	sethi	%hi(0x44556677),STORE_PATTERN_2
	sethi	%hi(0x8899aabb),STORE_PATTERN_3
	sethi	%hi(0xccddeeff),STORE_PATTERN_4
	sethi	%hi(0x01232266),STORE_PATTERN_5
	sethi	%hi(0x89abaaee),STORE_PATTERN_6
	sethi	%hi(0x115599dd),STORE_PATTERN_7
	or   	STORE_PATTERN_1,%lo(0x00112233),STORE_PATTERN_1
	or   	STORE_PATTERN_2,%lo(0x44556677),STORE_PATTERN_2
	or   	STORE_PATTERN_3,%lo(0x8899aabb),STORE_PATTERN_3
	or   	STORE_PATTERN_4,%lo(0xccddeeff),STORE_PATTERN_4
	or   	STORE_PATTERN_5,%lo(0x01232266),STORE_PATTERN_5
	or   	STORE_PATTERN_6,%lo(0x89abaaee),STORE_PATTERN_6
	or   	STORE_PATTERN_7,%lo(0x115599dd),STORE_PATTERN_7

/*	test	STB	*/

	set	0x0000051b,OPERATION			! SET OPERATION

	stb	STORE_PATTERN_1,[STORE_ADDRESS]
	stb	STORE_PATTERN_2,[STORE_ADDRESS+1]
	stb	STORE_PATTERN_3,[STORE_ADDRESS+2]
	stb	STORE_PATTERN_4,[STORE_ADDRESS+3]

	sethi	%hi(0x3377bbff),DATA_PATTERN_1
	ld	[STORE_ADDRESS],LOAD_PATTERN_1
	or   	DATA_PATTERN_1,%lo(0x3377bbff),DATA_PATTERN_1
	nop
	xorcc	LOAD_PATTERN_1,DATA_PATTERN_1,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop201
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop201:
/*	test	STH	*/

	set	0x0000051f,OPERATION			! SET OPERATION

	sth	STORE_PATTERN_5,[STORE_ADDRESS+4]
	sth	STORE_PATTERN_6,[STORE_ADDRESS+6]

	sethi	%hi(0x2266aaee),DATA_PATTERN_2
	ld	[STORE_ADDRESS+4],LOAD_PATTERN_2
	or	DATA_PATTERN_2,%lo(0x2266aaee),DATA_PATTERN_2
	nop
	xorcc	LOAD_PATTERN_2,DATA_PATTERN_2,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop203
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop203:
/*	test	ST	*/

	set	0x00000051,OPERATION			! SET OPERATION

	st	STORE_PATTERN_7,[STORE_ADDRESS+8]
	st	STORE_PATTERN_2,[STORE_ADDRESS+12]

	sethi	%hi(0x115599dd),DATA_PATTERN_3
	ld	[STORE_ADDRESS+8],LOAD_PATTERN_3
	or	DATA_PATTERN_3,%lo(0x115599dd),DATA_PATTERN_3
	nop
	xorcc	LOAD_PATTERN_3,DATA_PATTERN_3,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop205
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop205:
	sethi	%hi(0x44556677),DATA_PATTERN_4
	ld	[STORE_ADDRESS+12],LOAD_PATTERN_4
	or	DATA_PATTERN_4,%lo(0x44556677),DATA_PATTERN_4
	nop
	xorcc	LOAD_PATTERN_4,DATA_PATTERN_4,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop206
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop206:
/*	test	STBA	*/
#ifdef USE_ALTERNATE_SPACE
/*
 * This code has been modified for the BIT ASIs.  To store to a cache
 * line, ASI=0x2, A[31:28]=0x9.
 */

	set	0x90000000, LOAD_PATTERN_7			! temp reg
	or	LOAD_PATTERN_7, STORE_ADDRESS, STORE_ADDRESS	! get 0x9 in
								! high bits

	sethi	%hi(0x000051ba),OPERATION		! SET OPERATION
	nop
	or	OPERATION,%lo(0x000051ba),OPERATION

	stba	STORE_PATTERN_1,[STORE_ADDRESS]0x0f
	set	1,OFF_SET
	stba	STORE_PATTERN_2,[STORE_ADDRESS+OFF_SET]0x0f
	set	2,OFF_SET
	stba	STORE_PATTERN_3,[STORE_ADDRESS+OFF_SET]0x0f
	set	3,OFF_SET
	stba	STORE_PATTERN_4,[STORE_ADDRESS+OFF_SET]0x0f

	andn	STORE_ADDRESS, LOAD_PATTERN_7, STORE_ADDRESS	! get 0x9 out
							! of high addr bits
	sethi	%hi(0x3377bbff),DATA_PATTERN_1
	ld	[STORE_ADDRESS],LOAD_PATTERN_1
	or   	DATA_PATTERN_1,%lo(0x3377bbff),DATA_PATTERN_1
	nop
	xorcc	LOAD_PATTERN_1,DATA_PATTERN_1,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop202
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop202:
	or	LOAD_PATTERN_7, STORE_ADDRESS, STORE_ADDRESS	! get 0x9 in
								! high bits
/*	test	STHA	*/

	sethi	%hi(0x000051fa),OPERATION		! SET OPERATION
	nop
	or	OPERATION,%lo(0x000051fa),OPERATION

/*	set	4,OFF_SET
	stha	STORE_PATTERN_5,[STORE_ADDRESS+OFF_SET]0x0f
	set	6,OFF_SET
	stha	STORE_PATTERN_6,[STORE_ADDRESS+OFF_SET]0x0f 

	andn	STORE_ADDRESS, LOAD_PATTERN_7, STORE_ADDRESS	! get 0x9 out
							! of high addr bits
	ld	[STORE_ADDRESS+4],LOAD_PATTERN_2
	sethi	%hi(0x2266aaee),DATA_PATTERN_2
	nop
	or	DATA_PATTERN_2,%lo(0x2266aaee),DATA_PATTERN_2
	nop
	xorcc	LOAD_PATTERN_2,DATA_PATTERN_2,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop204
	nop
	add	STORE_ERRORS,1,STORE_ERRORS */
stop204:
	or	LOAD_PATTERN_7, STORE_ADDRESS, STORE_ADDRESS	! get 0x9 in
								! high bits
/*	test	STA	*/

	set	0x0000051a,OPERATION			! SET OPERATION

/*	mov	8, OFF_SET
	sta	STORE_PATTERN_7,[STORE_ADDRESS+OFF_SET]0x0f
	mov	12, OFF_SET
	sta	STORE_PATTERN_2,[STORE_ADDRESS+OFF_SET]0x0f 

	sethi	%hi(0x115599dd),DATA_PATTERN_3
	or	DATA_PATTERN_3,%lo(0x115599dd),DATA_PATTERN_3
	mov	8, OFF_SET
	lda	[STORE_ADDRESS+OFF_SET]0x0f,LOAD_PATTERN_3
	nop
	xorcc	LOAD_PATTERN_3,DATA_PATTERN_3,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop215
	nop
	add	STORE_ERRORS,1,STORE_ERRORS */
stop215:
	sethi	%hi(0x44556677),DATA_PATTERN_4
	mov	12, OFF_SET
	lda	[STORE_ADDRESS+OFF_SET]0x0f,LOAD_PATTERN_4
	or	DATA_PATTERN_4,%lo(0x44556677),DATA_PATTERN_4
	nop
	xorcc	LOAD_PATTERN_4,DATA_PATTERN_4,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop216
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop216:
/*	test Atomic Load-Store Alternate	*/

	sethi	%hi(0x0001d51a),OPERATION		! SET OPERATION
	or	OPERATION,%lo(0x0001d51a),OPERATION

	set	0x22, %l5
	set	4,OFF_SET
	stba	%l5, [LOAD_ADDRESS+OFF_SET]0x0f
	mov	0, %l5

	ldstuba	[LOAD_ADDRESS+OFF_SET]0x0f,DATA_PATTERN_5
	nop
	nop
	set	0x22, LOAD_PATTERN_5
	lduba	[LOAD_ADDRESS+OFF_SET]0x0f, DATA_PATTERN_6
	set	0xff, LOAD_PATTERN_6
	xorcc	LOAD_PATTERN_5,DATA_PATTERN_5,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop236
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop236:
	xorcc	LOAD_PATTERN_6,DATA_PATTERN_6,%r0
	add	STORE_TESTS,1,STORE_TESTS
	be	stop237
	nop
	add	STORE_ERRORS,1,STORE_ERRORS
stop237:
	

	nop
	add	LOAD_ERRORS,STORE_ERRORS,TOTAL_ERRORS
	add	LOAD_TESTS,STORE_TESTS,TOTAL_TESTS
	and	TOTAL_ERRORS,%lo(0x000001ff),TOTAL_ERRORS
	and	TOTAL_TESTS,%lo(0x000001ff),TOTAL_TESTS
#endif


stop: b testok; nop
	nop
	nop
	nop
data:
	.word	0x3377bbff,0x2266aaee,0x115599dd,0x004488cc
	.word	0x22336677,0xaabbeeff,0x00112233
memory:
	.skip	4*7

